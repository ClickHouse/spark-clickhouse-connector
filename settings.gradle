/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

rootProject.name = 'spark-clickhouse-connector'

include ":clickhouse-core"

List<String> knownScalaBinaryVersions = System.getProperty("known_scala_binary_versions").split(",")
String scala_binary_version = System.getProperty("scala_binary_version")

if (!knownScalaBinaryVersions.contains(scala_binary_version)) {
    throw new GradleException("Found unsupported Scala version: " + scala_binary_version)
}

List<String> knownSparkBinaryVersions = System.getProperty("known_spark_binary_versions").split(",")
String sparkBinaryVersionsString = System.getProperty("spark_binary_versions")
List<String> sparkBinaryVersions = sparkBinaryVersionsString != null && !sparkBinaryVersionsString.isEmpty() ? sparkBinaryVersionsString.split(",") : []

if (!knownSparkBinaryVersions.containsAll(sparkBinaryVersions)) {
    throw new GradleException("Found unsupported Spark versions: " + (sparkBinaryVersions - knownSparkBinaryVersions))
}

if (sparkBinaryVersions.contains("3.2")) {
    include ":clickhouse-spark-3.2_$scala_binary_version"
    project(":clickhouse-spark-3.2_$scala_binary_version").projectDir = file('spark-3.2/clickhouse-spark')
    project(":clickhouse-spark-3.2_$scala_binary_version").name = "clickhouse-spark-3.2_$scala_binary_version"

    include ":clickhouse-spark-runtime-3.2_$scala_binary_version"
    project(":clickhouse-spark-runtime-3.2_$scala_binary_version").projectDir = file('spark-3.2/clickhouse-spark-runtime')
    project(":clickhouse-spark-runtime-3.2_$scala_binary_version").name = "clickhouse-spark-runtime-3.2_$scala_binary_version"

    include ":clickhouse-spark-it-3.2_$scala_binary_version"
    project(":clickhouse-spark-it-3.2_$scala_binary_version").projectDir = file('spark-3.2/clickhouse-spark-it')
    project(":clickhouse-spark-it-3.2_$scala_binary_version").name = "clickhouse-spark-it-3.2_$scala_binary_version"
}

if (sparkBinaryVersions.contains("3.3")) {
    include ":clickhouse-spark-3.3_$scala_binary_version"
    project(":clickhouse-spark-3.3_$scala_binary_version").projectDir = file('spark-3.3/clickhouse-spark')
    project(":clickhouse-spark-3.3_$scala_binary_version").name = "clickhouse-spark-3.3_$scala_binary_version"

    include ":clickhouse-spark-runtime-3.3_$scala_binary_version"
    project(":clickhouse-spark-runtime-3.3_$scala_binary_version").projectDir = file('spark-3.3/clickhouse-spark-runtime')
    project(":clickhouse-spark-runtime-3.3_$scala_binary_version").name = "clickhouse-spark-runtime-3.3_$scala_binary_version"

    include ":clickhouse-spark-it-3.3_$scala_binary_version"
    project(":clickhouse-spark-it-3.3_$scala_binary_version").projectDir = file('spark-3.3/clickhouse-spark-it')
    project(":clickhouse-spark-it-3.3_$scala_binary_version").name = "clickhouse-spark-it-3.3_$scala_binary_version"
}
