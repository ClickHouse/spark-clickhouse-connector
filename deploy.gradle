/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

subprojects {
    apply plugin: "maven-publish"
    apply plugin: 'signing'
    afterEvaluate {
        publishing {
            if (project.name.contains("-runtime")) {
                // Determine the corresponding implementation project name
                def implProjectName = project.name.replace("-runtime", "")
                def implProject = project.parent.findProject(":${implProjectName}")

                tasks.register('sourceJar', Jar) {
                    archiveClassifier.set('sources')

                    if (implProject != null) {
                        // Include the sources from the implementation project
                        from implProject.sourceSets.main.allSource

                        // Also include the sources from clickhouse-core
                        def coreProject = project.parent.findProject(":clickhouse-core")
                        if (coreProject != null) {
                            // Declare dependency on generateGrammarSource task
                            dependsOn coreProject.tasks.generateGrammarSource
                            from coreProject.sourceSets.main.allSource
                        }
                    } else {
                        // Fallback to an empty jar if implementation project was not found
                        from sourceSets.main.allSource
                    }

                    group 'build'
                }

                tasks.register('javadocJar', Jar) {
                    archiveClassifier.set('javadoc')

                    if (implProject != null) {
                        // Include the javadoc from the implementation project
                        dependsOn implProject.javadoc
                        from implProject.javadoc.destinationDir

                        // Optionally include javadoc from clickhouse-core
                        def coreProject = project.parent.findProject(":clickhouse-core")
                        if (coreProject != null) {
                            dependsOn coreProject.javadoc
                            from coreProject.javadoc.destinationDir
                        }
                    } else {
                        // Fallback to the current project's javadoc
                        dependsOn javadoc
                        from javadoc.destinationDir
                    }

                    group 'build'
                }

                artifacts {
                    archives sourceJar
                    archives javadocJar
                }
                publications {
                    shadow(MavenPublication) { publication ->
                        project.shadow.component(publication)
                        artifact sourceJar
                        artifact javadocJar

                        pom {
                            name = "Spark ClickHouse Connector"
                            url = "https://github.com/clickhouse/spark-clickhouse-connector"
                            description = "Spark ClickHouse Connector build on Apache Spark DataSourceV2 API."
                            developers {
                                developer {
                                    id = 'pan3793'
                                    name = 'Cheng Pan'
                                    email = 'chengpan@apache.org'
                                }
                            }
                            licenses {
                                license {
                                    name = "The Apache License, Version 2.0"
                                    url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                                    distribution = "repo"
                                }
                            }
                            scm {
                                url = "https://github.com/clickhouse/spark-clickhouse-connector.git"
                            }
                            issueManagement {
                                system = 'GitHub'
                                url = 'https://github.com/clickhouse/spark-clickhouse-connector/issues'
                            }
                        }
                    }
                }
            }

            repositories {
                maven {
                    allowInsecureProtocol = true
                    url = project.version.endsWith("-SNAPSHOT") ? "$mavenSnapshotsRepo" : "$mavenReleasesRepo"

                    credentials {
                        username = project.hasProperty("mavenUser") ? "$mavenUser" : ""
                        password = project.hasProperty("mavenPassword") ? "$mavenPassword" : ""
                    }
                }
            }
        }
        if (project.hasProperty('release') && project.name.contains("-runtime")) {
            signing {
                useGpgCmd()
                sign publishing.publications.shadow
            }
        }
    }
}
